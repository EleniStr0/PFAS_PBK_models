for (i in 1:N_compartments) {
params_list[i] <- physiological_params$Volume[i]
names(params_list)[i] <- paste0('V_', physiological_params$Compartment[i])
params_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
names(params_list)[i] <- paste0('Q_', physiological_params$Compartment[i])
}
params_list
params_list <- list()
# Create a V_i and Q_i for each compartment and assign the corresponding values
for (i in 1:N_compartments) {
params_list[i] <- physiological_params$Volume[i]
names(params_list)[i] <- paste0('V_', physiological_params$Compartment[i])
# params_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
# names(params_list)[i] <- paste0('Q_', physiological_params$Compartment[i])
}
params_list
params_list <- list()
# Create a V_i and Q_i for each compartment and assign the corresponding values
for (i in 1:N_compartments) {
params_list[i] <- physiological_params$Volume[i]
names(params_list)[i] <- paste0('V_', physiological_params$Compartment[i])
params_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
names(params_list)[N_compartments + i] <- paste0('Q_', physiological_params$Compartment[i])
}
params_list
within(params_list, rm(Q_Plasma)) # remove Q_Plasma because it does not exist
params_list
params_list <- within(params_list, rm(Q_Plasma)) # remove Q_Plasma because it does not exist
params_list
wdir <- 'C:/Users/vassi/Documents/GitHub/PFAS_PBK_models/Fabrega et al.2015/Model_validation'
setwd(wdir)
# Load the physiological parameters (Fabrega et al.(2021): Table 1)
physiological_params <- openxlsx::read.xlsx('Physiological_parameters.xlsx')
colnames(physiological_params) <- c('Compartment', 'Volume', 'Cardiac_output')
# N_compertments is the number of compartments of the model (total volume and
# cardiac output included)
N_compartments = dim(physiological_params)[1]
physiological_list <- list()
# Create a V_i and Q_i for each compartment and assign the corresponding values
for (i in 1:N_compartments) {
physiological_list[i] <- physiological_params$Volume[i]
names(physiological_list)[i] <- paste0('V_', physiological_params$Compartment[i])
physiological_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
names(physiological_list)[N_compartments + i] <- paste0('Q_', physiological_params$Compartment[i])
}
physiological_list <- within(physiological_list, rm(Q_Plasma)) # remove Q_Plasma because it does not exist
physiological_list
physiological_list
View(physiological_list)
substance_params <- openxlsx::read.xlsx('Partition_Coefficients.xlsx')
substance_params
substance_params <- openxlsx::read.xlsx('Partition_Coefficients.xlsx')
substance_params
substance_params <- openxlsx::read.xlsx('Partition_Coefficients.xlsx')
substance_params
substance_list <- list()
substance <- 'PFOS'
keep_params <- substance_params[substance_params$Substance==substance,2:dim(substance_params)[2]]
keep_params
keep_params
substance_list
for (i in 1:length(keep_params)) {
substance_list[i] <- keep_params[i]
if(i < 6){
names(substance_list)[i] <- paste0('P', names(keep_params)[i])
}else{
names(substance_list)[i] <- names(keep_params)[i]
}
}
substance_list
substance_list <- list()
keep_params <- substance_params[substance_params$Substance==substance,2:dim(substance_params)[2]]
for (i in 1:length(keep_params)) {
substance_list[i] <- keep_params[i]
if(i < 6){
names(substance_list)[i] <- paste0('P-', names(keep_params)[i])
}else{
names(substance_list)[i] <- names(keep_params)[i]
}
}
substance_list
for (i in 1:length(keep_params)) {
substance_list[i] <- keep_params[i]
if(i < 6){
names(substance_list)[i] <- paste0('P_', names(keep_params)[i])
}else{
names(substance_list)[i] <- names(keep_params)[i]
}
}
substance_list
substance_list
# Load the physiological parameters (Fabrega et al.(2021): Table 1)
physiological_params <- openxlsx::read.xlsx('Physiological_parameters.xlsx')
colnames(physiological_params) <- c('Compartment', 'Volume', 'Cardiac_output')
# N_compertments is the number of compartments of the model (total volume and
# cardiac output included)
N_compartments = dim(physiological_params)[1]
physiological_list <- list()
# Create a V_i and Q_i for each compartment and assign the corresponding values
for (i in 1:N_compartments) {
physiological_list[i] <- physiological_params$Volume[i]
names(physiological_list)[i] <- paste0('V_', physiological_params$Compartment[i])
physiological_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
names(physiological_list)[N_compartments + i] <- paste0('Q_', physiological_params$Compartment[i])
}
physiological_list <- within(physiological_list, rm(Q_Plasma)) # remove Q_Plasma because it does not exist
physiological_list
constant_params <- list('P_fat' = 0.04, 'P_Rob' = 0.12, 'P_Gut' = 0.05)
constant_params
rm(constant_params)
constant_list <- list('P_fat' = 0.04, 'P_Rob' = 0.12, 'P_Gut' = 0.05)
append(physiological_list, substance_list)
params_list <- append(params_list, constant_list)
create.params <- function(data_dir, substance){
# Load the physiological parameters (Fabrega et al.(2021): Table 1)
physiological_params <- openxlsx::read.xlsx('Physiological_parameters.xlsx')
colnames(physiological_params) <- c('Compartment', 'Volume', 'Cardiac_output')
# N_compertments is the number of compartments of the model (total volume and
# cardiac output included)
N_compartments = dim(physiological_params)[1]
physiological_list <- list()
# Create a V_i and Q_i for each compartment and assign the corresponding values
for (i in 1:N_compartments) {
physiological_list[i] <- physiological_params$Volume[i]
names(physiological_list)[i] <- paste0('V_', physiological_params$Compartment[i])
physiological_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
names(physiological_list)[N_compartments + i] <- paste0('Q_', physiological_params$Compartment[i])
}
physiological_list <- within(physiological_list, rm(Q_Plasma)) # remove Q_Plasma because it does not exist
substance_params <- openxlsx::read.xlsx('Partition_Coefficients.xlsx')
substance_list <- list()
keep_params <- substance_params[substance_params$Substance==substance,2:dim(substance_params)[2]]
for (i in 1:length(keep_params)) {
substance_list[i] <- keep_params[i]
if(i < 6){
names(substance_list)[i] <- paste0('P_', names(keep_params)[i])
}else{
names(substance_list)[i] <- names(keep_params)[i]
}
}
constant_list <- list('P_fat' = 0.04, 'P_Rob' = 0.12, 'P_Gut' = 0.05)
params_list <- append(physiological_list, substance_list)
params_list <- append(params_list, constant_list)
}
params_list
params_list <- append(physiological_list, substance_list)
params_list <- append(params_list, constant_list)
params_list
create.params <- function(data_dir, substance){
# Load the physiological parameters (Fabrega et al.(2021): Table 1)
physiological_params <- openxlsx::read.xlsx('Physiological_parameters.xlsx')
colnames(physiological_params) <- c('Compartment', 'Volume', 'Cardiac_output')
# N_compertments is the number of compartments of the model (total volume and
# cardiac output included)
N_compartments = dim(physiological_params)[1]
physiological_list <- list()
# Create a V_i and Q_i for each compartment and assign the corresponding values
for (i in 1:N_compartments) {
physiological_list[i] <- physiological_params$Volume[i]
names(physiological_list)[i] <- paste0('V_', physiological_params$Compartment[i])
physiological_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
names(physiological_list)[N_compartments + i] <- paste0('Q_', physiological_params$Compartment[i])
}
physiological_list <- within(physiological_list, rm(Q_Plasma)) # remove Q_Plasma because it does not exist
substance_params <- openxlsx::read.xlsx('Partition_Coefficients.xlsx')
substance_list <- list()
keep_params <- substance_params[substance_params$Substance==substance,2:dim(substance_params)[2]]
for (i in 1:length(keep_params)) {
substance_list[i] <- keep_params[i]
if(i < 6){
names(substance_list)[i] <- paste0('P_', names(keep_params)[i])
}else{
names(substance_list)[i] <- names(keep_params)[i]
}
}
constant_list <- list('P_fat' = 0.04, 'P_Rob' = 0.12, 'P_Gut' = 0.05)
params_list <- append(physiological_list, substance_list)
params_list <- append(params_list, constant_list)
return(params_list)
}
create.params(wdir, 'PFOS')
wdir <- 'C:/Users/vassi/Documents/GitHub/PFAS_PBK_models/Fabrega et al.2015/Model_validation'
setwd(wdir)
create.params <- function(data_dir, substance){
# Load the physiological parameters (Fabrega et al.(2021): Table 1)
physiological_params <- openxlsx::read.xlsx('Physiological_parameters.xlsx')
colnames(physiological_params) <- c('Compartment', 'Volume', 'Cardiac_output')
# N_compertments is the number of compartments of the model (total volume and
# cardiac output included)
N_compartments = dim(physiological_params)[1]
physiological_list <- list()
# Create a V_i and Q_i for each compartment and assign the corresponding values
for (i in 1:N_compartments) {
physiological_list[i] <- physiological_params$Volume[i]
names(physiological_list)[i] <- paste0('V_', physiological_params$Compartment[i])
physiological_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
names(physiological_list)[N_compartments + i] <- paste0('Q_', physiological_params$Compartment[i])
}
physiological_list <- within(physiological_list, rm(Q_Plasma)) # remove Q_Plasma because it does not exist
substance_params <- openxlsx::read.xlsx('Partition_Coefficients.xlsx')
substance_list <- list()
keep_params <- substance_params[substance_params$Substance==substance,2:dim(substance_params)[2]]
for (i in 1:length(keep_params)) {
substance_list[i] <- keep_params[i]
if(i < 6){
names(substance_list)[i] <- paste0('P_', names(keep_params)[i])
}else{
names(substance_list)[i] <- names(keep_params)[i]
}
}
constant_list <- list('P_fat' = 0.04, 'P_Rob' = 0.12, 'P_Gut' = 0.05)
params_list <- append(physiological_list, substance_list)
params_list <- append(params_list, constant_list)
return(params_list)
}
create.params(wdir, 'PFOS')
params <- create.params(wdir, 'PFOS')
View(params)
wdir <- 'C:/Users/vassi/Documents/GitHub/PFAS_PBK_models/Fabrega et al.2015/Model_validation'
setwd(wdir)
create.params <- function(data_dir, substance){
# Load the physiological parameters (Fabrega et al.(2021): Table 1)
physiological_params <- openxlsx::read.xlsx('Physiological_parameters.xlsx')
colnames(physiological_params) <- c('Compartment', 'Volume', 'Cardiac_output')
# N_compertments is the number of compartments of the model (total volume and
# cardiac output included)
N_compartments = dim(physiological_params)[1]
physiological_list <- list()
# Create a V_i and Q_i for each compartment and assign the corresponding values
for (i in 1:N_compartments) {
physiological_list[i] <- physiological_params$Volume[i]
names(physiological_list)[i] <- paste0('V_', physiological_params$Compartment[i])
physiological_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
names(physiological_list)[N_compartments + i] <- paste0('Q_', physiological_params$Compartment[i])
}
physiological_list <- within(physiological_list, rm(Q_Plasma)) # remove Q_Plasma because it does not exist
substance_params <- openxlsx::read.xlsx('Partition_Coefficients.xlsx')
substance_list <- list()
keep_params <- substance_params[substance_params$Substance==substance,2:dim(substance_params)[2]]
for (i in 1:length(keep_params)) {
substance_list[i] <- keep_params[i]
if(i < 6){
names(substance_list)[i] <- paste0('P_', names(keep_params)[i])
}else{
names(substance_list)[i] <- names(keep_params)[i]
}
}
constant_list <- list('P_fat' = 0.04, 'P_Rob' = 0.12, 'P_Gut' = 0.05)
substance_list <- append(substance_list, constant_list)
params_list <- append(physiological_list, substance_list)
return(params_list)
}
params <- create.params(wdir, 'PFOS')
View(params)
wdir <- 'C:/Users/vassi/Documents/GitHub/PFAS_PBK_models/Fabrega et al.2015/Model_validation'
setwd(wdir)
create.params <- function(data_dir, substance){
# Load the physiological parameters (Fabrega et al.(2021): Table 1)
physiological_params <- openxlsx::read.xlsx('Physiological_parameters.xlsx')
colnames(physiological_params) <- c('Compartment', 'Volume', 'Cardiac_output')
# N_compertments is the number of compartments of the model (total volume and
# cardiac output included)
N_compartments = dim(physiological_params)[1]
physiological_list <- list()
# Create a V_i and Q_i for each compartment and assign the corresponding values
for (i in 1:N_compartments) {
physiological_list[i] <- physiological_params$Volume[i]
names(physiological_list)[i] <- paste0('V_', physiological_params$Compartment[i])
physiological_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
names(physiological_list)[N_compartments + i] <- paste0('Q_', physiological_params$Compartment[i])
}
physiological_list <- within(physiological_list, rm(Q_Plasma)) # remove Q_Plasma because it does not exist
substance_params <- openxlsx::read.xlsx('Partition_Coefficients.xlsx')
substance_list <- list()
keep_params <- substance_params[substance_params$Substance==substance,2:dim(substance_params)[2]]
for (i in 1:length(keep_params)) {
substance_list[i] <- keep_params[i]
if(i < 6){
names(substance_list)[i] <- paste0('P_', names(keep_params)[i])
}else{
names(substance_list)[i] <- names(keep_params)[i]
}
}
constant_list <- list('P_fat' = 0.04, 'P_Rob' = 0.12, 'P_Gut' = 0.05)
substance_list <- append(substance_list, constant_list)
params_list <- append(physiological_list, substance_list)
return(params_list)
}
params <- create.params(wdir, 'PFOS')
View(params)
wdir <- 'C:/Users/vassi/Documents/GitHub/PFAS_PBK_models/Fabrega et al.2015/Model_validation'
setwd(wdir)
create.params <- function(data_dir, substance){
# Load the physiological parameters (Fabrega et al.(2021): Table 1)
physiological_params <- openxlsx::read.xlsx('Physiological_parameters.xlsx')
colnames(physiological_params) <- c('Compartment', 'Volume', 'Cardiac_output')
# N_compertments is the number of compartments of the model (total volume and
# cardiac output included)
N_compartments = dim(physiological_params)[1]
physiological_list <- list()
# Create a V_i and Q_i for each compartment and assign the corresponding values
for (i in 1:N_compartments) {
physiological_list[i] <- physiological_params$Volume[i]
names(physiological_list)[i] <- paste0('V_', physiological_params$Compartment[i])
physiological_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
names(physiological_list)[N_compartments + i] <- paste0('Q_', physiological_params$Compartment[i])
}
physiological_list <- within(physiological_list, rm(Q_Plasma)) # remove Q_Plasma because it does not exist
substance_params <- openxlsx::read.xlsx('Partition_Coefficients.xlsx')
substance_list <- list()
keep_params <- substance_params[substance_params$Substance==substance,2:dim(substance_params)[2]]
for (i in 1:length(keep_params)) {
substance_list[i] <- keep_params[i]
if(i < 6){
names(substance_list)[i] <- paste0('P_', names(keep_params)[i])
}else{
names(substance_list)[i] <- names(keep_params)[i]
}
}
constant_list <- list('P_fat' = 0.04, 'P_Rob' = 0.12, 'P_Gut' = 0.05)
substance_list <- append(constant_list, substance_list)
params_list <- append(physiological_list, substance_list)
return(params_list)
}
params <- create.params(wdir, 'PFOS')
unlist(params)
for (i in 1:length(params)) {
assign(names(params)[i], params[[i]])
}
Kt
ode.func <- function(time, inits, params, custom.func){
with(as.list(c(inits, params)),{
# Concentration in Gut
dC_Gut <- Q_Gut*Free*(C_Plasma - C_Gut/P_Gut)/V_Gut
# Concentration in Liver
dC_Liver <- Free*(Q_Liver*C_Plasma + Q_Gut*C_Gut/P_Gut - (Q_Liver+Q_Gut)*C_Liver/P_Liver)/V_Liver
# Concentration in Kidney
dC_Kidney <- ((Q_Kidney*Free*(C_Plasma-C_Kidney)/P_Kidney) + (Tm*C_Filtrate)/(Kt+C_Filtrate))/V_Kidney
# Concentration in Filtrate
dC_Filtrate = (Q_Filtrate*(Free*C_Plasma - C_Filtrate) - (Tm*C_Filtrate)/(Kt+C_Filtrate))/V_Filtrate
# Concentration in Fat
dC_Fat <- Q_Fat*Free*(C_Plasma - C_Fat/P_Fat)/V_Fat
# Concentration in Lungs
dC_Lungs <- Q_Lungs*Free*(C_Plasma - C_Lungs/P_Lungs)/V_Lungs
# Concentration in Brain
dC_Brain <- Q_Brain*Free*(C_Plasma - C_Brain/P_Brain)/V_Brain
# Concentration in Rob
dC_Rob <- Q_Rob*Free*(C_Plasma - C_Rob/P_Rob)/V_Rob
return(list(c("dC_Gut"=dC_Gut, "dC_Liver"=dC_Liver, "dC_Kidney"=dC_Kidney,
"dC_Filtrate"=dC_Filtrate, "dC_Fat"=dC_Fat,
"dC_Lungs"=dC_Lungs, "dC_Brain"=dC_Brain, "dC_Rob"=dC_Rob)))
})
}
1.64/(1.64+4.90)
openxlsx::read.xlsx('PFAS_Intake.xlsx')
# Load the data for the intake (Fabrega et al.(2015) Table 1)
intake_data <- openxlsx::read.xlsx('PFAS_Intake.xlsx')
substance
substance <- 'PFOS'
Intake_day = intake_data[intake_data$Substance==substance, intake_data$Total]
Intake_day = intake_data[intake_data$Substance==substance, "Total"]
Intake_day
# Units of parameters
# Partition Coefficients: (unitless)
# V_i: Volume of tissue i (ml)
# Q_i: Blood flow of tissue i (L/h)
# Tm: Resoprtion maximum (ng/h)
# Kt: Affinity constant (ng/h)
# Free: the unbound fraction of substance in the plasma (unitless)
# Load the physiological parameters (Fabrega et al.(2021): Table 1)
physiological_params <- openxlsx::read.xlsx('Physiological_parameters.xlsx')
colnames(physiological_params) <- c('Compartment', 'Volume', 'Cardiac_output')
# N_compertments is the number of compartments of the model (total volume and
# cardiac output included)
N_compartments = dim(physiological_params)[1]
physiological_list <- list()
# Create a V_i and Q_i for each compartment and assign the corresponding values
for (i in 1:N_compartments) {
physiological_list[i] <- physiological_params$Volume[i]
names(physiological_list)[i] <- paste0('V_', physiological_params$Compartment[i])
physiological_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
names(physiological_list)[N_compartments + i] <- paste0('Q_', physiological_params$Compartment[i])
}
physiological_list <- within(physiological_list, rm(Q_Plasma)) # remove Q_Plasma because it does not exist
substance_params <- openxlsx::read.xlsx('Partition_Coefficients.xlsx')
substance_list <- list()
keep_params <- substance_params[substance_params$Substance==substance,2:dim(substance_params)[2]]
for (i in 1:length(keep_params)) {
substance_list[i] <- keep_params[i]
if(i < 6){
names(substance_list)[i] <- paste0('P_', names(keep_params)[i])
}else{
names(substance_list)[i] <- names(keep_params)[i]
}
}
# According to Fabrega et al. (2015) the Partition coefficients of
# Fat, Rob and Gut compartments come from the data on PFOA in rats
# from Loccisano et al.(2011)
constant_list <- list('P_Fat' = 0.04, 'P_Rob' = 0.12, 'P_Gut' = 0.05)
substance_list <- append(constant_list, substance_list)
# Load the data for the intake (Fabrega et al.(2015) Table 1)
# The column of total intake is given in ng/day
intake_data <- openxlsx::read.xlsx('PFAS_Intake.xlsx')
Intake_day = intake_data[intake_data$Substance==substance, "Total"]
Intake <- Intake_day/24 # Intake given in ng/h
constant_list
substance_list <- append(substance_list, Intake)
substance_list
substance_list <- append(substance_list, c('Intake'=Intake))
substance_list
# Units of parameters
# Partition Coefficients: (unitless)
# V_i: Volume of tissue i (ml)
# Q_i: Blood flow of tissue i (L/h)
# Tm: Resoprtion maximum (ng/h)
# Kt: Affinity constant (ng/h)
# Free: the unbound fraction of substance in the plasma (unitless)
# Load the physiological parameters (Fabrega et al.(2021): Table 1)
physiological_params <- openxlsx::read.xlsx('Physiological_parameters.xlsx')
colnames(physiological_params) <- c('Compartment', 'Volume', 'Cardiac_output')
# N_compertments is the number of compartments of the model (total volume and
# cardiac output included)
N_compartments = dim(physiological_params)[1]
physiological_list <- list()
# Create a V_i and Q_i for each compartment and assign the corresponding values
for (i in 1:N_compartments) {
physiological_list[i] <- physiological_params$Volume[i]
names(physiological_list)[i] <- paste0('V_', physiological_params$Compartment[i])
physiological_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
names(physiological_list)[N_compartments + i] <- paste0('Q_', physiological_params$Compartment[i])
}
physiological_list <- within(physiological_list, rm(Q_Plasma)) # remove Q_Plasma because it does not exist
substance_params <- openxlsx::read.xlsx('Partition_Coefficients.xlsx')
substance_list <- list()
keep_params <- substance_params[substance_params$Substance==substance,2:dim(substance_params)[2]]
for (i in 1:length(keep_params)) {
substance_list[i] <- keep_params[i]
if(i < 6){
names(substance_list)[i] <- paste0('P_', names(keep_params)[i])
}else{
names(substance_list)[i] <- names(keep_params)[i]
}
}
# According to Fabrega et al. (2015) the Partition coefficients of
# Fat, Rob and Gut compartments come from the data on PFOA in rats
# from Loccisano et al.(2011)
constant_list <- list('P_Fat' = 0.04, 'P_Rob' = 0.12, 'P_Gut' = 0.05)
substance_list <- append(constant_list, substance_list)
# Load the data for the intake (Fabrega et al.(2015) Table 1)
# The column of total intake is given in ng/day
intake_data <- openxlsx::read.xlsx('PFAS_Intake.xlsx')
Intake_day = intake_data[intake_data$Substance==substance, "Total"]
Intake <- Intake_day/24 # Intake given in ng/h
substance_list <- append(substance_list, c('Intake'=Intake))
params_list <- append(physiological_list, substance_list)
params_list
wdir <- 'C:/Users/vassi/Documents/GitHub/PFAS_PBK_models/Fabrega et al.2015/Model_validation'
setwd(wdir)
#============================#
#1. Parameters of the model  #
#============================#
create.params <- function(data_dir, substance){
# Units of parameters
# Partition Coefficients: (unitless)
# V_i: Volume of tissue i (ml)
# Q_i: Blood flow of tissue i (L/h)
# Tm: Resoprtion maximum (ng/h)
# Kt: Affinity constant (ng/h)
# Free: the unbound fraction of substance in the plasma (unitless)
# Load the physiological parameters (Fabrega et al.(2021): Table 1)
physiological_params <- openxlsx::read.xlsx('Physiological_parameters.xlsx')
colnames(physiological_params) <- c('Compartment', 'Volume', 'Cardiac_output')
# N_compertments is the number of compartments of the model (total volume and
# cardiac output included)
N_compartments = dim(physiological_params)[1]
physiological_list <- list()
# Create a V_i and Q_i for each compartment and assign the corresponding values
for (i in 1:N_compartments) {
physiological_list[i] <- physiological_params$Volume[i]
names(physiological_list)[i] <- paste0('V_', physiological_params$Compartment[i])
physiological_list[N_compartments + i] <- physiological_params$Cardiac_output[i]
names(physiological_list)[N_compartments + i] <- paste0('Q_', physiological_params$Compartment[i])
}
physiological_list <- within(physiological_list, rm(Q_Plasma)) # remove Q_Plasma because it does not exist
substance_params <- openxlsx::read.xlsx('Partition_Coefficients.xlsx')
substance_list <- list()
keep_params <- substance_params[substance_params$Substance==substance,2:dim(substance_params)[2]]
for (i in 1:length(keep_params)) {
substance_list[i] <- keep_params[i]
if(i < 6){
names(substance_list)[i] <- paste0('P_', names(keep_params)[i])
}else{
names(substance_list)[i] <- names(keep_params)[i]
}
}
# According to Fabrega et al. (2015) the Partition coefficients of
# Fat, Rob and Gut compartments come from the data on PFOA in rats
# from Loccisano et al.(2011)
constant_list <- list('P_Fat' = 0.04, 'P_Rob' = 0.12, 'P_Gut' = 0.05)
substance_list <- append(constant_list, substance_list)
# Load the data for the intake (Fabrega et al.(2015) Table 1)
# The column of total intake is given in ng/day
intake_data <- openxlsx::read.xlsx('PFAS_Intake.xlsx')
Intake_day = intake_data[intake_data$Substance==substance, "Total"]
Intake <- Intake_day/24 # Intake given in ng/h
substance_list <- append(substance_list, c('Intake'=Intake))
params_list <- append(physiological_list, substance_list)
return(params_list)
}
################################################################################
params <- create.params(wdir, 'PFOS')
params
